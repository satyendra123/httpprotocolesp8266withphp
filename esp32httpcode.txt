#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

WiFiClient client;
HTTPClient http;

String device_id = "Device0001";
String ssid = "Airtel_tejv_3002";
String password = "air73137";

float DHT_Temperature = 22.4;
float DHT_Humidity = 34;

String HTTPS_POST_URL = "http://192.168.1.16:1880/update-sensor/";
String HTTPS_GET_URL = "http://192.168.1.16:1880/get-sensor/";

const int LED_PIN = 2; // GPIO 2 for the built-in LED

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  setup_wifi();
}

void loop() {

  // Create JSON object for temperature data
  StaticJsonDocument<200> jsonTemperature;
  jsonTemperature["device_id"] = device_id;
  jsonTemperature["type"] = "Temperature";
  jsonTemperature["value"] = DHT_Temperature;

  // Serialize JSON object to a String
  String pkt;
  serializeJson(jsonTemperature, pkt);

  HTTPS_POST(HTTPS_POST_URL, pkt);

  // Create JSON object for humidity data
  StaticJsonDocument<200> jsonHumidity;
  jsonHumidity["device_id"] = device_id;
  jsonHumidity["type"] = "Humidity";
  jsonHumidity["value"] = DHT_Humidity;

  // Serialize JSON object to a String
  String pkt2;
  serializeJson(jsonHumidity, pkt2);

  HTTPS_POST(HTTPS_POST_URL, pkt2);

  HTTPS_GET(HTTPS_GET_URL);

  delay(1000);
}

void setup_wifi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
}

void HTTPS_POST(String HTTPS_POST_URL, String PostPacket) 
{
  Serial.println("\nPosting to: " + HTTPS_POST_URL);
  Serial.println("PostPacket: " + PostPacket);

  Serial.println("Connecting to server..");
  if (http.begin(client, HTTPS_POST_URL)) {
    http.addHeader("Content-Type", "application/json");
    int httpCode = http.POST(PostPacket);
    if (httpCode > 0) {
      Serial.println("httpCode: " + String(httpCode));
      if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_CREATED) {
        String ServerResponse = http.getString();
        Serial.println("ServerResponse: " + ServerResponse);
        // Parse the JSON response
        StaticJsonDocument<200> jsonResponse;
        deserializeJson(jsonResponse, ServerResponse);
        // Check if the relay is "OPENEN" and turn on the LED
        if (jsonResponse["relay"] == "OPENEN") {
          digitalWrite(LED_PIN, HIGH); // Turn on the LED
          delay(1000); // Wait for 1 second
          digitalWrite(LED_PIN, LOW); // Turn off the LED
        }
      }
    } else {
      Serial.print("Failed to POST. Error: ");
      Serial.println(http.errorToString(httpCode).c_str());
    }
  } else {
    Serial.print("Failed to connect to server");
  }
  http.end();
}

void HTTPS_GET(String HTTPS_GET_URL) 
{
  Serial.println("\nGetting from: " + HTTPS_GET_URL);

  Serial.println("Connecting to server..");
  if (http.begin(client, HTTPS_GET_URL)) {
    int httpCode = http.GET();
    if (httpCode > 0) {
      Serial.println("httpCode: " + String(httpCode));
      if (httpCode == HTTP_CODE_OK) {
        String ServerResponse = http.getString();
        Serial.println("\nServerResponse: " + ServerResponse);
      }
    } else {
      Serial.print("Failed to GET. Error: ");
      Serial.println(http.errorToString(httpCode).c_str());
    }
  } else {
    Serial.print("Failed to connect to server");
  }
  http.end();
}


/*
// EXAMPLE-2 ye code bhi humara work kar rha hai is code me humne arduinojson library ka use nahi kiya hai. aur apne se packet banaya hai jaise hum postman se send karte hai waise.
#include <WiFi.h>
#include <HTTPClient.h>

WiFiClient client;
HTTPClient http;

String device_id = "Device0001";
String ssid = "Airtel_tejv_3002";
String password = "air73137";

float DHT_Temperature = 22.4;
float DHT_Humidity = 34;

String HTTPS_POST_URL = "http://192.168.1.16:1880/update-sensor/";
String HTTPS_GET_URL = "http://192.168.1.16:1880/get-sensor/";

const int LED_PIN = 2; // GPIO 2 for the built-in LED

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  setup_wifi();
}

void loop() {

  String pkt = "{";
  pkt += "\"device_id\": \"" + device_id + "\", ";
  pkt += "\"type\": \"Temperature\", ";
  pkt += "\"value\": " + String(DHT_Temperature) + "";
  pkt += "}";
  HTTPS_POST(HTTPS_POST_URL, pkt);

  String pkt2 = "{";
  pkt2 += "\"device_id\": \"" + device_id + "\", ";
  pkt2 += "\"type\": \"Humidity\", ";
  pkt2 += "\"value\": " + String(DHT_Humidity) + "";
  pkt2 += "}";
  HTTPS_POST(HTTPS_POST_URL, pkt2);

  HTTPS_GET(HTTPS_GET_URL);

  delay(1000);
}

void setup_wifi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
}

void HTTPS_POST(String HTTPS_POST_URL, String PostPacket) 
{
  Serial.println("\nPosting to: " + HTTPS_POST_URL);
  Serial.println("PostPacket: " + PostPacket);

  Serial.println("Connecting to server..");
  if (http.begin(client, HTTPS_POST_URL)) {
    http.addHeader("Content-Type", "application/json");
    int httpCode = http.POST(PostPacket);
    if (httpCode > 0) {
      Serial.println("httpCode: " + String(httpCode));
      if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_CREATED) {
        String ServerResponse = http.getString();
        Serial.println("ServerResponse: " + ServerResponse);
        // Check if the response contains "success" and turn on the LED
        if (ServerResponse.indexOf("success") != -1) {
          digitalWrite(LED_PIN, HIGH); // Turn on the LED
          delay(1000); // Wait for 1 second
          digitalWrite(LED_PIN, LOW); // Turn off the LED
        }
      }
    } else {
      Serial.print("Failed to POST. Error: ");
      Serial.println(http.errorToString(httpCode).c_str());
    }
  } else {
    Serial.print("Failed to connect to server");
  }
  http.end();
}

void HTTPS_GET(String HTTPS_GET_URL) 
{
  Serial.println("\nGetting from: " + HTTPS_GET_URL);

  Serial.println("Connecting to server..");
  if (http.begin(client, HTTPS_GET_URL)) {
    int httpCode = http.GET();
    if (httpCode > 0) {
      Serial.println("httpCode: " + String(httpCode));
      if (httpCode == HTTP_CODE_OK) {
        String ServerResponse = http.getString();
        Serial.println("\nServerResponse: " + ServerResponse);
      }
    } else {
      Serial.print("Failed to GET. Error: ");
      Serial.println(http.errorToString(httpCode).c_str());
    }
  } else {
    Serial.print("Failed to connect to server");
  }
  http.end();
}


//EXAMPLE-2 ye code humne ahmadlogs ke usse liya hai aur ye data send karega http post protocol se and php isko receive karega aur data ko database me insert karega
/*************************************************************************************************
 *  Created By: Tauseef Ahmad
 *  Created On: 3 April, 2023
 *  
 *  YouTube Video: https://youtu.be/VEN5kgjEuh8
 *  My Channel: https://www.youtube.com/channel/UCOXYfOHgu-C-UfGyDcu5sYw/
 *  
 *  *********************************************************************************************
 *  Preferences--> Aditional boards Manager URLs : 
 *  For ESP32 (2.0.3):
 *  https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
 ***********************************************************************************************/
 
#include <WiFi.h>
#include <HTTPClient.h>

#include <DHT.h> 
#define DHTPIN 19 //D19 
#define DHTTYPE DHT11 
DHT dht11(DHTPIN, DHTTYPE); 

String URL = "http://computer_ip/project_folder/project_file.php";

const char* ssid = "ENTER_WIFI_SSID"; 
const char* password = "ENTER_WIFI_PASSWORD"; 

int temperature = 0;
int humidity = 0;

void setup() {
  Serial.begin(115200);

  dht11.begin(); 
  
  connectWiFi();
}

void loop() {
  if(WiFi.status() != WL_CONNECTED) {
    connectWiFi();
  }

  Load_DHT11_Data();
  String postData = "temperature=" + String(temperature) + "&humidity=" + String(humidity);
  
  HTTPClient http;
  http.begin(URL);
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");
  
  int httpCode = http.POST(postData);
  String payload = "";

  if(httpCode > 0) {
    // file found at server
    if(httpCode == HTTP_CODE_OK) {
      String payload = http.getString();
      Serial.println(payload);
    } else {
      // HTTP header has been send and Server response header has been handled
      Serial.printf("[HTTP] GET... code: %d\n", httpCode);
    }
  } else {
    Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
  }
  
  http.end();  //Close connection

  Serial.print("URL : "); Serial.println(URL); 
  Serial.print("Data: "); Serial.println(postData);
  Serial.print("httpCode: "); Serial.println(httpCode);
  Serial.print("payload : "); Serial.println(payload);
  Serial.println("--------------------------------------------------");
  delay(5000);
}


void Load_DHT11_Data() {
  //-----------------------------------------------------------
  temperature = dht11.readTemperature(); //Celsius
  humidity = dht11.readHumidity();
  //-----------------------------------------------------------
  // Check if any reads failed.
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    temperature = 0;
    humidity = 0;
  }
  //-----------------------------------------------------------
  Serial.printf("Temperature: %d Â°C\n", temperature);
  Serial.printf("Humidity: %d %%\n", humidity);
}

void connectWiFi() {
  WiFi.mode(WIFI_OFF);
  delay(1000);
  //This line hides the viewing of ESP as wifi hotspot
  WiFi.mode(WIFI_STA);
  
  WiFi.begin(ssid, password);
  Serial.println("Connecting to WiFi");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
    
  Serial.print("connected to : "); Serial.println(ssid);
  Serial.print("IP address: "); Serial.println(WiFi.localIP());
}
